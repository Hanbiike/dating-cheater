# Makefile for Han Dating Bot

.PHONY: help install test clean lint format type-check docker-build docker-run production-setup

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3
VENV := venv
PIP := $(VENV)/bin/pip
PYTHON_VENV := $(VENV)/bin/python

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[0;32m
YELLOW := \033[1;33m
BLUE := \033[0;34m
NC := \033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
	@echo "$(BLUE)Han Dating Bot - Makefile Commands$(NC)"
	@echo "=================================="
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "$(GREEN)%-20s$(NC) %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	$(PYTHON) -m venv $(VENV)
	$(PIP) install --upgrade pip
	$(PIP) install -r requirements.txt
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	@echo "$(BLUE)üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤...$(NC)"
	$(PYTHON_VENV) test.py

lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –ª–∏–Ω—Ç–µ—Ä–æ–º
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞...$(NC)"
	$(PIP) install flake8 black isort mypy
	$(VENV)/bin/flake8 --max-line-length=100 --ignore=E501,W503 *.py
	$(VENV)/bin/black --check --diff *.py
	$(VENV)/bin/isort --check-only --diff *.py

format: ## –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
	@echo "$(BLUE)üé® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞...$(NC)"
	$(PIP) install black isort
	$(VENV)/bin/black *.py
	$(VENV)/bin/isort *.py
	@echo "$(GREEN)‚úÖ –ö–æ–¥ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω$(NC)"

type-check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∏–ø—ã
	@echo "$(BLUE)üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤...$(NC)"
	$(PIP) install mypy
	$(VENV)/bin/mypy --ignore-missing-imports *.py

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	rm -rf __pycache__/
	rm -rf *.pyc
	rm -rf .mypy_cache/
	rm -rf .pytest_cache/
	rm -rf build/
	rm -rf dist/
	rm -rf *.egg-info/
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	@echo "$(BLUE)üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...$(NC)"
	docker build -t han-dating-bot:latest .
	@echo "$(GREEN)‚úÖ Docker –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω$(NC)"

docker-run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ Docker
	@echo "$(BLUE)üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker...$(NC)"
	docker-compose up -d

docker-stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(BLUE)üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(NC)"
	docker-compose down

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	docker-compose logs -f hanbot

production-setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ production –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ production...$(NC)"
	@if [ ! -f ".env" ]; then \
		echo "$(YELLOW)‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ .env.production...$(NC)"; \
		cp .env.production .env; \
		echo "$(YELLOW)üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º$(NC)"; \
	fi
	mkdir -p data/conversations data/backups logs
	chmod +x start_production.sh
	@echo "$(GREEN)‚úÖ Production –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ$(NC)"

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ development —Ä–µ–∂–∏–º–µ  
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ Han Dating Bot...$(NC)"
	$(PYTHON_VENV) main.py

run-production: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	./start_production.sh

systemd-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å systemd service (—Ç—Ä–µ–±—É–µ—Ç sudo)
	@echo "$(BLUE)‚öôÔ∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd service...$(NC)"
	sudo cp han-dating-bot.service /etc/systemd/system/
	sudo systemctl daemon-reload
	sudo systemctl enable han-dating-bot
	@echo "$(GREEN)‚úÖ Service —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo systemctl start han-dating-bot$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å service
	sudo systemctl status han-dating-bot

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ service  
	sudo journalctl -u han-dating-bot -f

dev-setup: install ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üõ†Ô∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(NC)"
	$(PIP) install pytest pytest-asyncio black isort mypy flake8
	@echo "$(GREEN)‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤–æ$(NC)"

check: lint type-check ## –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞

validate-config: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	@echo "$(BLUE)‚öôÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...$(NC)"
	$(PYTHON_VENV) -c "import config; print('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')"

backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –¥–∞–Ω–Ω—ã—Ö
	@echo "$(BLUE)üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏...$(NC)"
	tar -czf backup_$(shell date +%Y%m%d_%H%M%S).tar.gz data/ *.session* .env
	@echo "$(GREEN)‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞$(NC)"

# –ê–ª–∏–∞—Å—ã
start: run
stop: docker-stop
build: docker-build
deploy: production-setup docker-build
all: clean install test lint type-check
